@Html.Partial("WizardHeader", Machine["ListSection"], new ViewDataDictionary(this.ViewData) { { "current", (FACTS.Framework.Lookup.LookupCode)Machine["CurrentSection"] }, { "showHeader", (bool)Machine["ShowHeader"] } })

@using (Form())
{
    @using (Panel(stateFilter: "EnterPhysicalAddr", panelLayout: PanelLayout.Stacked,borderVisible:false))
    {
        @using (Panel(headingText: "Enter Address - Physical Location", defaultControlColumns: 4, defaultLabelColumns: 4))
        {
            <p>Enter the State physical location address for this employer. This address cannot be a Post Office box or private mail box. DO NOT: enter a client site, other temporary job site, or employee home address.</p>
            @SelectBox(labelText: "Same as:",lookupName:LookupTable.AddressType,lookupFilter: "code='MAIL'", dataSource:"SameAsPhyAddr",blankItemText:"Select One")
            @RadioButtonGroup(labelText: "Do you have physical location in Washington?", lookupName: LookupTable.BoolYesNo,lookupSort:"{DisplaySortOrder}", dataSource: "EmployerRegistration.EmployerDto.HasPhysicalLocation", required: "true")
            @RadioButtonGroup(labelText: "Is this employer's employees telecommuters or do they work out of their homes?", lookupName: LookupTable.BoolYesNo, lookupSort: "{DisplaySortOrder}", dataSource: "EmployerRegistration.EmployerDto.HasTelecommuter", required: "true")
            @TextBox(labelText: "Address Line 1:", formatter: Formatter.TextAlphaNumeric, dataSource: "PhysicalAddress.Address.AddressLine1", looseValidation: true, securityFilter: "SameAsPhyAddr != 'MAIL'",required: "SameAsPhyAddr != 'MAIL' && EmployerRegistration.EmployerDto.HasPhysicalLocation='Y'")
            @TextBox(labelText: "Address Line 2:", formatter: Formatter.TextAlphaNumeric, dataSource: "PhysicalAddress.Address.AddressLine2", looseValidation: true, securityFilter: "SameAsPhyAddr != 'MAIL'")
            @TextBox(labelText: "City:", formatter: Formatter.TextAlpha, dataSource: "PhysicalAddress.Address.City", looseValidation: true, securityFilter: "SameAsPhyAddr != 'MAIL'", required: "SameAsPhyAddr != 'MAIL' && EmployerRegistration.EmployerDto.HasPhysicalLocation='Y'")
            @Data(labelText: "State:",lookupName:LookupTable.State, dataSource: "PhysicalAddress.Address.StateCode", securityFilter: "SameAsPhyAddr != 'MAIL'")
            @TextBox(labelText: "ZIP/Postal Code:", formatter: Formatter.Postal, dataSource: "PhysicalAddress.Address.Zip", securityFilter: "SameAsPhyAddr != 'MAIL'", required: "SameAsPhyAddr != 'MAIL' && EmployerRegistration.EmployerDto.HasPhysicalLocation='Y'")
            @Data(labelText: "Country:",lookupName:LookupTable.Country, dataSource: "PhysicalAddress.Address.CountryCode", securityFilter: "SameAsPhyAddr != 'MAIL'")
            @TextBox(labelText: "Phone (Required if U.S. or Canada address):", formatter: Formatter.Phone, dataSource: "PhysicalAddress.Address.PhoneNumber", labelColumns:4,controlColumns:2, securityFilter: "SameAsPhyAddr != 'MAIL'", required: "SameAsPhyAddr != 'MAIL' && EmployerRegistration.EmployerDto.HasPhysicalLocation='Y'")
            @TextBox(labelText: "ext:", dataSource: "PhysicalAddress.Address.PhoneNumberExtn", formatter: Formatter.TextNumeric,labelColumns:1,controlColumns:1, securityFilter: "SameAsPhyAddr != 'MAIL'")
            @TextBox(labelText: "Fax:", formatter: Formatter.TextNumeric, dataSource: "PhysicalAddress.Address.FaxNumber", securityFilter: "SameAsPhyAddr != 'MAIL'")
            @TextBox(labelText: "E-Mail:", formatter: Formatter.Email, dataSource: "PhysicalAddress.Address.Email", securityFilter: "SameAsPhyAddr != 'MAIL'")
            @TextBox(labelText: "Re-Enter E-Mail:", formatter: Formatter.Email, dataSource: "PhyAddrReEmail", securityFilter: "SameAsPhyAddr != 'MAIL'")

            @Data(labelText: "Address Line 1:", formatter: Formatter.TextAlphaNumeric, dataSource: "EntityAddress.Address.AddressLine1", looseValidation: true, securityFilter: "SameAsPhyAddr == 'MAIL'", cssClass:"bold")
            @Data(labelText: "Address Line 2:", formatter: Formatter.TextAlphaNumeric, dataSource: "EntityAddress.Address.AddressLine2", looseValidation: true, securityFilter: "SameAsPhyAddr == 'MAIL'", cssClass: "bold")
            @Data(labelText: "City:", formatter: Formatter.TextAlpha, dataSource: "EntityAddress.Address.City", looseValidation: true, securityFilter: "SameAsPhyAddr == 'MAIL'", cssClass: "bold")
            @Data(labelText: "State:", lookupName: LookupTable.State, dataSource: "EntityAddress.Address.StateCode", securityFilter: "SameAsPhyAddr == 'MAIL'", cssClass: "bold")
            @Data(labelText: "ZIP/Postal Code:", formatter: Formatter.Postal, dataSource: "EntityAddress.Address.Zip", securityFilter: "SameAsPhyAddr == 'MAIL'", cssClass: "bold")
            @Data(labelText: "Country:", lookupName: LookupTable.Country, dataSource: "EntityAddress.Address.CountryCode", securityFilter: "SameAsPhyAddr == 'MAIL'", cssClass: "bold")
            @Data(labelText: "Phone (Required if U.S. or Canada address):", formatter: Formatter.Phone, dataSource: "EntityAddress.Address.PhoneNumber", labelColumns: 4, controlColumns: 2, securityFilter: "SameAsPhyAddr == 'MAIL'", cssClass: "bold")
            @Data(labelText: "ext:", dataSource: "EntityAddress.Address.PhoneNumberExtn", formatter: Formatter.TextNumeric, labelColumns: 1, controlColumns: 1, securityFilter: "SameAsPhyAddr == 'MAIL'", cssClass: "bold")
            @Data(labelText: "Fax:", formatter: Formatter.TextNumeric, dataSource: "EntityAddress.Address.FaxNumber", securityFilter: "SameAsPhyAddr == 'MAIL'", cssClass: "bold")
            @Data(labelText: "E-Mail:", formatter: Formatter.Email, dataSource: "EntityAddress.Address.Email", securityFilter: "SameAsPhyAddr == 'MAIL'", cssClass: "bold")
        }
        @using (Panel(borderVisible: false, panelLayout: PanelLayout.Inline, cssClass: "text-center"))
        {
            @Button(transition: "Previous")
            @Button(transition: "Next")
        }
    }
}